{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","packages/Space/Space.Const.js","packages/Point/Point.Const.js","packages/shared/utils.js","packages/Atom/Atom.Const.js","packages/Atom/Atom.Core.js","packages/Atom/Atom.Neighbor.js","packages/Atom/Atom.Connected.js","packages/Atom/Atom.Walk.js","packages/Atom/Atom.Chain.js","packages/Atom/index.js","packages/Point/Point.Core.js","packages/Point/Point.Neighbor.js","packages/Point/Point.Connected.js","packages/Point/Point.Chain.js","packages/Point/Point.Network.js","packages/Point/index.js","packages/Space/Space.Core.js","packages/Space/Space.Print.js","packages/Space/Space.Explore.js","packages/Space/index.js","fixtures/desmos.js","fixtures/index.js"],"names":["module","exports","PRECISION","TIME_BUDGET_DEFAULT","BASE_UNIT","randomDistanceRatio","flag","ratio","Math","random","abs","randomPositiveDistanceRatio","randomNaturalNumber","upperLimit","Number","MAX_SAFE_INTEGER","floor","randomSafeNumber","limit","validatePositive","randomPositiveSafeNumber","value","Error","validateLimits","left","right","validateDistanceRatio","distanceRatio","repeat","call","count","results","push","length","call2Nomials","n1","n2","i","n1i","undefined","n2i","max","add2Nomials","diffNomials","isSameNomials","euclideanDistance","sum","sqrt","isCloseTo","received","expected","precision","expectedDiff","Infinity","pow","isCloseIn","a","b","baseUnit","isCloseToPeriod","number","period","midPoint","calculatePolyNumbers","coefficients","variable","reduce","coefficient","exponent","polyNumbersTranslation","nomials","input","Superscripts","Object","assign","SuperscriptsReverseMap","toSuperscripts","split","map","n","polyNumberFormatter","nomial","index","useSuperScripts","polyNumbersFormatter","filter","s","join","replace","parseSuperscript","script","parseCoefficient","parsePolyNumbersFormulaItem","item","trim","parsePolyNumbersFormula","formula","forEach","trimNomials","nonZeroStarted","reverse","result","concat","toFixed","last","array","sleep","second","Promise","resolve","setTimeout","keys","key","randomShuffle","list","c","d","randomSubList","slice","genFileTimePostfix","Date","toString","LEFT_SAFE_INTEGER","MIN_SAFE_INTEGER","RIGHT_SAFE_INTEGER","SCALE_DEPTH_LOG2_NATURAL","log2","SCALE_DEPTH_LOG2_REAL","SCALE_DEPTH_LOG2_MIN_VALUE","MIN_VALUE","AtomConst","LEFT_INFINITY","RIGHT_INFINITY","DISTANCE_RATIO_HALF","DISTANCE_STEP_ONE","SCALE_DEPTH_LOG2","NEIGHBOR_COLLISION_ERROR","require","getValue","forceOffsetValue","offset","newValue","min","rightLimit","leftLimit","roundUp","isIntegerUnit","isFractionUnit","round","getLeftSafeValue","leftNeighborValue","getLeftNeighborValue","getLeftHalfwayValue","getRightSafeValue","rightNeighborValue","getRightNeighborValue","getRightHalfwayValue","isTrappedWithIntegerUnit","isTrappedWithFractionUnit","isTrapped","shakeOffLeft","shakeOffRight","shakeOff","findLeftNeighbor","leftHalfwayValue","connectLeftNeighbor","newAtom","findRightNeighbor","rightHalfwayValue","connectRightNeighbor","findBiNeighbors","neighbors","leftValue","rightValue","findNeighbor","findRandomNeighbor","findRandomNeighbors","isLeftNeighbor","atom","isRightNeighbor","isNeighbor","gotoRandomNeighbor","newNeighborCollisionCheck","newNeighbor","exLeftNeighbor","exRightNeighbor","findLeftConnected","distance","findRightConnected","findConnected","findConnectedAtScalar","validateValue","findConnectedsAtScalars","values","isLeftConnected","walkLeftUntil","isRightConnected","walkRightUntil","isConnected","findRandomConnected","findRandomConnecteds","gotoRandomConnected","chainAtoms","getChainAtoms","gotoLeftMost","gotoRightMost","includeSelf","walkToLeftMost","walkToRightMost","walkAllFromLeft","walkAllFromRight","getLeftChainAtoms","unshift","getRightChainAtoms","getLeftChainValues","getRightChainValues","getChainValues","AtomCore","AtomNeighbor","AtomConnected","AtomWalk","AtomChain","Atom","parent","config","prototype","PointConst","makeAtom","cloneAtom","getAtom","checkIndex","atoms","getAtoms","getNomial","init","collect","getNomials","getTrimmedNomials","getDimensions","checkDimension","getRandomIndex","dimension","extendDimension","fillAtomAt","point","cloneWithNewAtomAt","direction","newPoint","needClone","atomForNewPoint","baseOffset","isSame","some","checkoutMatchAtoms","func","thisAtom","pointAtom","x","getDirection","baseDivisor","baseIndex","thisIndexValue","distanceAtIndex","findLeftNeighborAt","atomNeighbor","findRightNeighborAt","findNeighborAt","findBiNeighborsAt","biNeighbors","_","findBiNeighborsMatrix","directions","getBiNeighborsAt","getBiNeighbors","getNeighbors","depth","secondNeighbors","biNeighbor","Set","findRandomNeighborAt","findRandomNeighborsAt","atomNeighbors","findRandomLeftNeighborWith","findRandomLeftNeighborsWith","findRandomLeftNeighbor","findRandomLeftNeighbors","findRandomRightNeighborWith","findRandomRightNeighborsWith","findRandomRightNeighbor","findRandomRightNeighbors","findRandomNeighborWith","findRandomNeighborsWith","checkNeighbor","neighborAtoms","neighborInfo","printNeighborsAt","log","console","JSON","stringify","printNeighbors","findLeftConnectedAt","atomConnected","findRightConnectedAt","findConnectedAt","findConnectedAtWithScalar","findRandomLeftConnectedWith","findRandomLeftConnectedsWith","findRandomLeftConnected","findRandomLeftConnecteds","findRandomRightConnectedWith","findRandomRightConnectedsWith","findRandomRightConnected","findRandomRightConnecteds","findRandomConnectedWith","findRandomConnectedsWith","findRandomConnectedWithScalar","checkConnected","connectedAtoms","connectedInfo","getLeftChainPointsAt","getRightChainPointsAt","getChainPointsAt","getChainPoints","shakeOffChainPoints","getInNetworkPoints","indexOf","shift","isInNetwork","PointCore","PointNeighbor","PointConnected","PointChain","PointNetwork","Point","args","SpaceConst","take","inputs","expectations","setup","origin","minDistance","minDistancePoint","stepCount","checkCount","lastSearchTimeUsed","previousVisitedIndex","visitingIndex","keyPoints","visitedPoints","checkedPoints","check","destroyed","onProgress","gotPerfectSolution","meanSquaredError","updateMinDistance","isMinDistancePointTrapped","beforeUpdateMinDistance","updateVisitingIndex","updateSettledKeyPoint","previousKeyPoint","updateDirection","currentKeyPoint","resetStartPoint","squaredError","expectation","system","output","translation","totalSquaredError","error","destroy","printMinNeighbors","minNeighborsNomials","regularSample","amount","logLength","samplingPeriod","randomSample","sampleLog","printPointsLog","printVisitedPoints","logSampleAmount","printCheckedPoints","printSolution","printFunc","solutionFormatter","showMinNeighbors","showVisitedPoints","showCheckedPoints","bind","thePoint","solutionNomials","solution","successTrialRate","timeStepSpeed","findRandomMinNeighbor","checkBiNeighbors","checkBiNeighborsMatrixList","checkBiNeighborsMatrix","matrix","matrixIsNotEmpty","exploreBiNeighborsMatrix","maxDimensions","exploredSome","exploreBiNeighbors","minBiNeighbors","exploreLocalMinimum","timeBudget","trialBudget","timePlaned","startAt","timeUsed","totalTimeUsed","findThePoint","SpaceCore","SpacePrint","SpaceExplore","Space","DesmosView","elt","calculator","Desmos","GraphingCalculator","latex","xValues","yValues","y","bindEvents","addEventListener","e","onClick","evt","test","target","className","touches","changedTouches","rect","getBoundingClientRect","clientX","clientY","top","mathCoordinates","pixelsToMath","inRectangle","graphpaperBounds","toPrecision","updateTable","updateGraph","setExpression","id","type","columns","afterUpdateTable","k","hidden","points","bottom","document","getElementById","dv","space","getInputsExpectations","startFormula","update","updateLatex","updateNomials"],"mappings":"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","file":"fixtures.28d2c8e3.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = {\n  PRECISION: 6,\n  TIME_BUDGET_DEFAULT: 5\n}\n","module.exports = {\n  PRECISION: 6\n}\n","const PRECISION = 6\nconst BASE_UNIT = +`1e-${PRECISION}`\n\nfunction randomDistanceRatio (flag = 0) {\n  let ratio\n  while (!ratio || ratio === -1) ratio = Math.random() * 2 - 1\n  if (!flag) return ratio\n  if (flag < 0) return -Math.abs(ratio)\n  if (flag > 0) return Math.abs(ratio)\n}\n\nfunction randomPositiveDistanceRatio () {\n  return randomDistanceRatio(1)\n}\n\nfunction randomNaturalNumber (upperLimit = Number.MAX_SAFE_INTEGER) {\n  return Math.floor(Math.random() * upperLimit)\n}\n\nfunction randomSafeNumber (limit = Number.MAX_SAFE_INTEGER) {\n  validatePositive(limit)\n  return randomDistanceRatio() * limit\n}\n\nfunction randomPositiveSafeNumber (limit = Number.MAX_SAFE_INTEGER) {\n  validatePositive(limit)\n  return randomPositiveDistanceRatio() * limit\n}\n\nfunction validatePositive (value) {\n  if (value <= 0) throw new Error(`Must be positive - ${value}`)\n}\n\nfunction validateLimits (value, left, right) {\n  if (value < left || value > right) throw new Error(`${left} <= ${value} <= ${right}`)\n  return true\n}\n\nfunction validateDistanceRatio (distanceRatio, flag = 0) {\n  if (distanceRatio === 0 ||\n    distanceRatio <= -1 ||\n    distanceRatio >= 1\n  ) throw new Error(`-1 < DistanceRatio(!==0) < 1. We get ${distanceRatio}`)\n\n  if (!flag) return\n  if (flag < 0 && distanceRatio > 0)\n    throw new Error(`DistanceRatio < 0. We get ${distanceRatio}`)\n  if (flag > 0 && distanceRatio < 0)\n    throw new Error(`DistanceRatio > 0. We get ${distanceRatio}`)\n}\n\nfunction repeat (call, count = 1) {\n  const results = []\n  while (count > 0) {\n    results.push(call(results.length))\n    count --\n  }\n  return results\n}\n\n// TODO: add test\nfunction call2Nomials (n1, n2, call) {\n  return repeat(i => {\n    const n1i = n1[i] === undefined ? 0 : n1[i]\n    const n2i = n2[i] === undefined ? 0 : n2[i]\n    return call(n1i, n2i)\n  }, Math.max(n1.length, n2.length))\n}\n\nfunction add2Nomials (n1, n2) {\n  return call2Nomials(n1, n2, (n1i, n2i) => {\n    return n2i + n1i\n  })\n}\n\nfunction diffNomials (n1, n2) {\n  return call2Nomials(n1, n2, (n1i, n2i) => n2i - n1i)\n}\n\nfunction isSameNomials (n1, n2) {\n  return euclideanDistance (n1, n2) === 0\n}\n\nfunction euclideanDistance (n1, n2) {\n  let sum = 0\n  repeat(i => {\n    const n1i = n1[i] === undefined ? 0 : n1[i]\n    const n2i = n2[i] === undefined ? 0 : n2[i]\n    return sum += (n2i - n1i) ** 2\n  }, Math.max(n1.length, n2.length))\n  return Math.sqrt(sum)\n}\n\n// TODO: add test\n\n// This is from facebook/jest - toBeCloseTo\n// https://github.com/facebook/jest/blob/2a92e7f49fa35b219e5099d56b0179bccc1bf53e/packages/expect/src/matchers.ts#L125\nfunction isCloseTo (received, expected, precision = PRECISION) {\n  let expectedDiff = 0\n  let receivedDiff = 0\n  if (received === Infinity && expected === Infinity) return true\n  if (received === -Infinity && expected === -Infinity) return true\n\n  expectedDiff = Math.pow(10, -precision) / 2\n  receivedDiff = Math.abs(expected - received)\n  return receivedDiff < expectedDiff\n}\n\nfunction isCloseIn (a, b, baseUnit = BASE_UNIT) {\n  if (a === Infinity && b === Infinity) return true\n  if (a === -Infinity && b === -Infinity) return true\n  return Math.abs(a - b) < baseUnit / 2\n}\n\n// TODO: add test\nfunction isCloseToPeriod (number, period, baseUnit = BASE_UNIT) {\n  const midPoint = period / 2\n  const midDistance = Math.abs(number % period - midPoint)\n  return isCloseIn(midDistance, midPoint, baseUnit)\n}\n\n// TODO: this should be moved out from the file\n// This is just a very basic example of translation function\n// \n// A translation takes a point, and outputs a system\n// eg. f(x) = a0 + a1x\n//\n// A system takes inputs, and gives out outputs\n// This is an example of translation\n// which the system is\n//   f(x) = a0 + a1 * x + a2 * x^2 ...\n//\n// For more information about poly numbers,\n// please follow the video by Norman J. Wildberger\n// https://www.youtube.com/watch?v=-Ad6pYjCAmg\n\nfunction calculatePolyNumbers (coefficients, variable) {\n  return coefficients.reduce((sum, coefficient, exponent) =>\n    sum + coefficient * (variable ** exponent), 0\n  )\n}\n\nfunction polyNumbersTranslation (nomials) {\n  return input => calculatePolyNumbers(nomials, input)\n}\n\nconst Superscripts = ['⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹',]\nSuperscripts['.'] = '⋅'\nObject.assign(Superscripts, {\n  '+': '⁺',\n  '-': '⁻',\n  '=': '⁼',\n  '(': '⁽',\n  ')': '⁾',\n  'n': 'ⁿ',\n  'i': 'ⁱ'\n})\nconst SuperscriptsReverseMap = {}\nObject.keys(Superscripts).forEach(key => SuperscriptsReverseMap[Superscripts[key]] = key)\n\nfunction toSuperscripts (number) {\n  return (number + '').split('').map(n => Superscripts[n] || n)\n}\nfunction polyNumberFormatter ({nomial, index, useSuperScripts}) {\n  return nomial ? `${\n    (nomial === 1 && index)\n      ? ''\n      : (nomial === -1 ? '-' : nomial)\n  }${\n    index ? `x${\n      index !== 1 ? (\n        useSuperScripts\n          ? toSuperscripts(index)\n          : `^${index}`\n      ) : ''\n    }` : ''\n  }` : ''\n}\nfunction polyNumbersFormatter (nomials, useSuperScripts = true) {\n  return `f(x) = ${\n    nomials\n      .map((nomial, index) => polyNumberFormatter({nomial, index, useSuperScripts}))\n      .filter(s => s)\n      .join(' + ')\n      .replace(/\\+\\s\\-/g, '- ')\n  }`\n}\nfunction parseSuperscript (script) {\n  if (script === undefined) return 0\n  if (script === '') return 1\n  return +script.split('')\n    .map(n => SuperscriptsReverseMap[n] || n)\n    .join('')\n}\nfunction parseCoefficient (number, exponent) {\n  number = (number+'').replace(/\\s/g, '')\n  number = number === '-' ? '-1' : number\n  return +number || (exponent ? 1 : 0)\n}\nfunction parsePolyNumbersFormulaItem (item) {\n  let [number, superscript] = item.trim().split('x')\n  const exponent = parseSuperscript(superscript)\n  const coefficient = parseCoefficient(number, exponent)\n  return [exponent, coefficient]\n}\nfunction parsePolyNumbersFormula (formula) {\n  const nomials = []\n  formula.replace(/^f\\(x\\) = /, '')\n    .replace(/e\\s*-/g, '*[ee]*')  // Fix science notation\n    .replace(/-/g, '+-')\n    .replace(/\\*\\[ee\\]\\*/g, 'e-') // Restore science notation\n    .split('+')\n    .map(parsePolyNumbersFormulaItem)\n    .forEach(([exponent, coefficient]) => {\n      nomials[exponent] = coefficient\n    })\n  return repeat(index => nomials[index] || 0, nomials.length)\n}\n\n// TODO: add test\nfunction trimNomials (nomials, precision = PRECISION) {\n  let nonZeroStarted = false\n  return [...nomials].reverse().reduce((result, nomial, index) => {\n    nonZeroStarted = nonZeroStarted || (precision\n      ? !isCloseTo(nomial, 0, precision)\n      : (nomial !== 0))\n    return nonZeroStarted\n      ? result.concat(precision ? +nomial.toFixed(precision) : nomial)\n      : result\n  }, []).reverse()\n}\n\n// TODO: add test\nfunction last (array) {\n  return array[array.length - 1]\n}\n\nasync function sleep (second = 1) {\n  return new Promise(resolve => setTimeout(resolve, second * 1000))\n}\n\n// TODO: test this amazing beautiful code\n// I have no idea what's this, but this works very fast\n// https://stackoverflow.com/a/25984542/6767484\nconst randomShuffle = list => (((a,b,c,d) => {\n  c=a.length;while(c)b=Math.random()*c--|0,d=a[c],a[c]=a[b],a[b]=d\n})(list),list)\nconst randomSubList = (list, count) => randomShuffle([...list]).slice(0, count)\n\n// TODO: add test\nconst genFileTimePostfix = () => new Date()\n  .toString()\n  .replace(/\\:/g,'-')\n  .replace(/[^\\d\\w\\-]/g, ' ')\n  .trim()\n  .replace(/\\s/g, '_')\n  .split('__')[0]\n\nmodule.exports = {\n  BASE_UNIT,\n  randomDistanceRatio,\n  randomPositiveDistanceRatio,\n  validateDistanceRatio,\n  randomNaturalNumber,\n  randomSafeNumber,\n  randomPositiveSafeNumber,\n  validatePositive,\n  validateLimits,\n  repeat,\n  add2Nomials,\n  diffNomials,\n  isSameNomials,\n  trimNomials,\n  euclideanDistance,\n\n  isCloseIn,\n  isCloseTo,\n  isCloseToPeriod,\n\n  calculatePolyNumbers,\n  polyNumbersTranslation,\n  polyNumbersFormatter,\n  parsePolyNumbersFormula,\n  last,\n  sleep,\n  randomShuffle,\n  randomSubList,\n  genFileTimePostfix\n}\n","const PRECISION = 6\nconst BASE_UNIT = +`1e-${PRECISION}`\nconst LEFT_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\nconst RIGHT_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nconst SCALE_DEPTH_LOG2_NATURAL = Math.log2(RIGHT_SAFE_INTEGER)\nconst SCALE_DEPTH_LOG2_REAL = 2 * SCALE_DEPTH_LOG2_NATURAL\nconst SCALE_DEPTH_LOG2_MIN_VALUE = - Math.log2(Number.MIN_VALUE)\n\nconst AtomConst = {\n  PRECISION,\n  BASE_UNIT,\n  LEFT_INFINITY: -Infinity,\n  RIGHT_INFINITY: Infinity,\n  LEFT_SAFE_INTEGER,\n  RIGHT_SAFE_INTEGER,\n  DISTANCE_RATIO_HALF: 0.5,\n  DISTANCE_STEP_ONE: 1,\n  SCALE_DEPTH_LOG2_NATURAL,\n  SCALE_DEPTH_LOG2_REAL,\n  SCALE_DEPTH_LOG2_MIN_VALUE,\n  SCALE_DEPTH_LOG2: SCALE_DEPTH_LOG2_NATURAL + SCALE_DEPTH_LOG2_MIN_VALUE,\n  NEIGHBOR_COLLISION_ERROR: new Error(`Neighbor collision!`)\n}\n\nmodule.exports = AtomConst\n","const {\n  isCloseIn\n} = require('../shared/utils')\nconst AtomConst = require('./Atom.Const')\n\nmodule.exports = {\n  getValue () {\n    return this.value\n  },\n\n  forceOffsetValue (offset) {\n    if (this.left || this.right) throw new Error(`Cannot force offset value!`)\n\n    let newValue = this.value + offset\n    newValue = Math.min(this.rightLimit, newValue)\n    newValue = Math.max(this.leftLimit, newValue)\n    newValue = this.roundUp(newValue)\n\n    this.value = newValue\n  },\n\n  isIntegerUnit () {\n    return this.baseUnit % 1 === 0\n  },\n\n  isFractionUnit () {\n    return this.baseUnit % 1 !== 0\n  },\n\n  roundUp (value) {\n    if (this.isFractionUnit()) return value\n    return this.value + Math.round((value - this.value) / this.baseUnit) * this.baseUnit\n  },\n\n  getLeftSafeValue () {\n    const leftNeighborValue = this.getLeftNeighborValue()\n    return leftNeighborValue <= this.leftLimit\n      ? this.leftLimit\n      : leftNeighborValue\n  },\n\n  getLeftHalfwayValue (distanceRatio = AtomConst.DISTANCE_RATIO_HALF) {\n    return !this.left\n      ? this.leftLimit\n      : + this.roundUp(\n        this.getLeftSafeValue() * distanceRatio +\n        this.getValue() * (1 - distanceRatio)\n      )\n  },\n\n  getRightSafeValue () {\n    const rightNeighborValue = this.getRightNeighborValue()\n    return rightNeighborValue >= this.rightLimit\n      ? this.rightLimit\n      : rightNeighborValue\n  },\n\n  getRightHalfwayValue (distanceRatio = AtomConst.DISTANCE_RATIO_HALF) {\n    return !this.right\n      ? this.rightLimit\n      :  + this.roundUp(\n        this.getRightSafeValue() * distanceRatio +\n        this.getValue() * (1 - distanceRatio)\n      )\n  },\n\n  isCloseIn ({ value }, baseUnit = this.baseUnit) {\n    return isCloseIn(this.value, value, baseUnit)\n  },\n\n  isTrappedWithIntegerUnit () {\n    return (\n      this.value - (this.left ? this.left.value : this.leftLimit) <= this.baseUnit\n    ) && (\n      (this.right ? this.right.value : this.rightLimit) - this.value <= this.baseUnit\n    )\n  },\n\n  isTrappedWithFractionUnit () {\n    return this.isCloseIn({ value: this.getLeftHalfwayValue() }) &&\n      this.isCloseIn({ value: this.getRightHalfwayValue() })\n  },\n\n  isTrapped () {\n    return this.isIntegerUnit()\n      ? this.isTrappedWithIntegerUnit()\n      : this.isTrappedWithFractionUnit()\n  },\n\n  shakeOffLeft () {\n    if (this.left) {\n      this.left.right = null\n      this.left = null\n    }\n  },\n\n  shakeOffRight () {\n    if (this.right) {\n      this.right.left = null\n      this.right = null\n    }\n  },\n\n  shakeOff () {\n    this.shakeOffLeft()\n    this.shakeOffRight()\n  }\n}\n","const {\n  randomDistanceRatio,\n  validateDistanceRatio,\n  repeat\n} = require('../shared/utils')\nconst AtomConst = require('./Atom.Const')\n\nmodule.exports = {\n  getLeftNeighborValue () {\n    return this.left ? this.left.getValue() : AtomConst.LEFT_INFINITY\n  },\n\n  getRightNeighborValue () {\n    return this.right ? this.right.getValue() : AtomConst.RIGHT_INFINITY\n  },\n\n  findLeftNeighbor (distanceRatio = AtomConst.DISTANCE_RATIO_HALF) {\n    validateDistanceRatio(distanceRatio, 1)\n    const leftHalfwayValue = this.getLeftHalfwayValue(distanceRatio)\n    return this.connectLeftNeighbor(this.newAtom(leftHalfwayValue))\n  },\n\n  findRightNeighbor (distanceRatio = AtomConst.DISTANCE_RATIO_HALF) {\n    validateDistanceRatio(distanceRatio, 1)\n    const rightHalfwayValue = this.getRightHalfwayValue(distanceRatio)\n    return this.connectRightNeighbor(this.newAtom(rightHalfwayValue))\n  },\n\n  findBiNeighbors () {\n    const neighbors = []\n\n    const leftValue = this.getLeftHalfwayValue()\n    if (leftValue < this.value &&\n      (!this.left || leftValue !== this.left.value)\n    ) neighbors.push(\n      this.connectLeftNeighbor(this.newAtom(leftValue))\n    )\n    const rightValue = this.getRightHalfwayValue()\n    if (rightValue > this.value &&\n      (!this.right || rightValue !== this.right.value)\n    ) neighbors.push(\n      this.connectRightNeighbor(this.newAtom(rightValue))\n    )\n\n    return neighbors\n  },\n\n  findNeighbor (distanceRatio = AtomConst.DISTANCE_RATIO_HALF) {\n    validateDistanceRatio(distanceRatio, 0)\n    return distanceRatio > 0\n      ? this.findRightNeighbor(distanceRatio)\n      : this.findLeftNeighbor(Math.abs(distanceRatio))\n  },\n\n  findRandomNeighbor () {\n    return this.findNeighbor(randomDistanceRatio())\n  },\n\n  findRandomNeighbors (count = 1) {\n    return repeat(() => this.findRandomNeighbor(), count)\n  },\n\n  isLeftNeighbor (atom) {\n    return this.left === atom && atom.right === this\n  },\n\n  isRightNeighbor (atom) {\n    return this.right === atom && atom.left === this\n  },\n\n  isNeighbor (atom) {\n    return this.isLeftNeighbor(atom) || this.isRightNeighbor(atom)\n  },\n\n  gotoRandomNeighbor () {\n    if (this.left === null && this.right === null)\n      throw new Error(`gotoRandomNeighbor: no neighbor!`)\n    if (this.left === null) return this.right\n    if (this.right === null) return this.left\n    return Math.random() < 0.5 ? this.left : this.right\n  },\n\n  // TODO: test this\n  newNeighborCollisionCheck (atom) {\n    if (this.value === atom.value) throw AtomConst.NEIGHBOR_COLLISION_ERROR\n  },\n\n  connectLeftNeighbor (newNeighbor) {\n    this.newNeighborCollisionCheck(newNeighbor)\n    const exLeftNeighbor = this.left\n\n    this.left = newNeighbor\n    newNeighbor.right = this\n\n    newNeighbor.left = exLeftNeighbor\n    if (exLeftNeighbor) exLeftNeighbor.right = newNeighbor\n\n    return newNeighbor\n  },\n\n  connectRightNeighbor (newNeighbor) {\n    this.newNeighborCollisionCheck(newNeighbor)\n    const exRightNeighbor = this.right\n\n    this.right = newNeighbor\n    newNeighbor.left = this\n\n    newNeighbor.right = exRightNeighbor\n    if (exRightNeighbor) exRightNeighbor.left = newNeighbor\n\n    return newNeighbor\n  }\n}\n","const {\n  randomNaturalNumber,\n  randomSafeNumber,\n  repeat\n} = require('../shared/utils')\nconst AtomConst = require('./Atom.Const')\n\nmodule.exports = {\n  findLeftConnected (distance = AtomConst.DISTANCE_STEP_ONE) {\n    if (distance < 0) throw new Error(`findLeftConnected ${distance}`)\n\n    const newValue = this.value - distance\n    let atom = this\n    while (atom) {\n      const leftValue = atom.getLeftNeighborValue()\n      if (leftValue === newValue) return atom.left\n      if (leftValue < newValue) return atom.connectLeftNeighbor(this.newAtom(newValue))\n      atom = atom.left\n    }\n    throw new Error(`findLeftConnected ${distance}`)\n  },\n\n  findRightConnected (distance = AtomConst.DISTANCE_STEP_ONE) {\n    if (distance < 0) throw new Error(`findRightConnected ${distance}`)\n\n    const newValue = this.value + distance\n    let atom = this\n    while (atom) {\n      const rightValue = atom.getRightNeighborValue()\n      if (rightValue === newValue) return atom.right\n      if (rightValue > newValue) return atom.connectRightNeighbor(this.newAtom(newValue))\n      atom = atom.right\n    }\n    throw new Error(`findRightConnected ${distance}`)\n  },\n\n  findConnected (distance = AtomConst.DISTANCE_STEP_ONE) {\n    if (distance === 0) throw new Error(`findConnected ${distance}`)\n\n    return distance > 0\n      ? this.findRightConnected(distance)\n      : this.findLeftConnected(Math.abs(distance))\n  },\n\n  findConnectedAtScalar (value) {\n    this.validateValue(value)\n    return this.findConnected(value - this.getValue())\n  },\n\n  findConnectedsAtScalars (values) {\n    return values.map(value => this.findConnectedAtScalar(value))\n  },\n\n  isLeftConnected (atom) {\n    return this.walkLeftUntil(left => left === atom)\n  },\n\n  isRightConnected (atom) {\n    return this.walkRightUntil(right => right === atom)\n  },\n\n  isConnected (atom) {\n    return this.isLeftConnected(atom) || this.isRightConnected(atom)\n  },\n\n  findRandomConnected () {\n    return this.findConnectedAtScalar(randomSafeNumber())\n  },\n\n  findRandomConnecteds (count = 1) {\n    return repeat(() => this.findRandomConnected(), count)\n  },\n\n  gotoRandomConnected () {\n    const chainAtoms = this.getChainAtoms()\n    if (chainAtoms.length === 1) throw new Error(`gotoRandomConnected: There's only one atom!`)\n    while (true) {\n      const result = chainAtoms[randomNaturalNumber(chainAtoms.length)]\n      if (result !== this) return result\n    }\n  }\n}\n","module.exports = {\n  gotoLeftMost () {\n    let left = this\n    while (left.left) left = left.left\n    return left\n  },\n\n  gotoRightMost () {\n    let right = this\n    while (right.right) right = right.right\n    return right\n  },\n\n  walkLeftUntil (call, includeSelf = false) {\n    let left = includeSelf ? this : this.left\n    while (left) {\n      const result = call(left)\n      if (result) return result\n      left = left.left\n    }\n  },\n\n  walkToLeftMost (call, includeSelf = false) {\n    let results = []\n    this.walkLeftUntil(left => {\n      results.push(call(left))\n    }, includeSelf)\n    return results\n  },\n\n  walkRightUntil (call, includeSelf = false) {\n    let right = includeSelf ? this : this.right\n    while (right) {\n      const result = call(right)\n      if (result) return result\n      right = right.right\n    }\n  },\n\n  walkToRightMost (call, includeSelf = false) {\n    let results = []\n    this.walkRightUntil(right => {\n      results.push(call(right))\n    }, includeSelf)\n    return results\n  },\n\n  walkAllFromLeft (call) {\n    return this.gotoLeftMost().walkToRightMost(call, true)\n  },\n\n  walkAllFromRight (call) {\n    return this.gotoRightMost().walkToLeftMost(call, true)\n  }\n}\n","module.exports = {\n  getLeftChainAtoms (includeSelf = false) {\n    const results = includeSelf ? [this] : []\n    let left = this\n    while (left = left.left) results.unshift(left)\n    return results\n  },\n\n  getRightChainAtoms (includeSelf = false) {\n    const results = includeSelf ? [this] : []\n    let right = this\n    while (right = right.right) results.push(right)\n    return results\n  },\n\n  getChainAtoms () {\n    return [...this.getLeftChainAtoms(), this, ...this.getRightChainAtoms()]\n  },\n\n  getLeftChainValues (includeSelf = false) {\n    return this.getLeftChainAtoms(includeSelf).map(atom => atom.getValue())\n  },\n\n  getRightChainValues (includeSelf = false) {\n    return this.getRightChainAtoms(includeSelf).map(atom => atom.getValue())\n  },\n\n  getChainValues () {\n    return this.getChainAtoms().map(atom => atom.getValue())\n  },\n}\n","const {\n  validatePositive,\n  validateLimits\n} = require('../shared/utils')\nconst AtomConst = require('./Atom.Const')\nconst AtomCore = require('./Atom.Core')\nconst AtomNeighbor = require('./Atom.Neighbor')\nconst AtomConnected = require('./Atom.Connected')\nconst AtomWalk = require('./Atom.Walk')\nconst AtomChain = require('./Atom.Chain')\n\nclass Atom {\n  static PRECISION = AtomConst.PRECISION\n  static LEFT_INFINITY = AtomConst.LEFT_INFINITY\n  static RIGHT_INFINITY = AtomConst.RIGHT_INFINITY\n  // Add config boundary :D\n  static LEFT_SAFE_INTEGER = AtomConst.LEFT_SAFE_INTEGER\n  static RIGHT_SAFE_INTEGER = AtomConst.RIGHT_SAFE_INTEGER\n  static DISTANCE_RATIO_HALF = AtomConst.DISTANCE_RATIO_HALF\n  static DISTANCE_STEP_ONE = AtomConst.DISTANCE_STEP_ONE\n  static SCALE_DEPTH_LOG2_NATURAL = AtomConst.SCALE_DEPTH_LOG2_NATURAL\n  static SCALE_DEPTH_LOG2_REAL = AtomConst.SCALE_DEPTH_LOG2_REAL\n  static SCALE_DEPTH_LOG2_MIN_VALUE = AtomConst.SCALE_DEPTH_LOG2_MIN_VALUE\n  static SCALE_DEPTH_LOG2 = AtomConst.SCALE_DEPTH_LOG2\n\n  static NEIGHBOR_COLLISION_ERROR = AtomConst.NEIGHBOR_COLLISION_ERROR\n\n  constructor (value = 0, {\n    parent,\n    baseUnit = AtomConst.BASE_UNIT,\n    leftLimit = AtomConst.LEFT_SAFE_INTEGER,\n    rightLimit = AtomConst.RIGHT_SAFE_INTEGER\n  } = {}) {\n    this.left = null\n    this.right = null\n    this.parent = parent\n\n    validatePositive(baseUnit)\n    this.baseUnit = baseUnit\n    this.leftLimit = leftLimit\n    this.rightLimit = rightLimit\n\n    this.validateValue(value)\n    this.value = value\n  }\n\n  newAtom (value, config) {\n    return new Atom(value, {\n      baseUnit: this.baseUnit,\n      leftLimit: this.leftLimit,\n      rightLimit: this.rightLimit,\n      ...config\n    })\n  }\n\n  validateValue (value) {\n    return validateLimits(value, this.leftLimit, this.rightLimit)\n  }\n}\n\nObject.assign(Atom.prototype, {\n  ...AtomCore,\n  ...AtomNeighbor,\n  ...AtomConnected,\n  ...AtomWalk,\n  ...AtomChain\n})\n\nmodule.exports = Atom\n","const Atom = require('../Atom')\nconst {\n  randomNaturalNumber,\n  repeat,\n  isCloseTo,\n  isSameNomials,\n  trimNomials,\n  euclideanDistance\n} = require('../shared/utils')\nconst PointConst = require('./Point.Const')\n\nmodule.exports = {\n  makeAtom (value = 0) {\n    let config = {parent: this}\n    if (typeof value === 'object') {\n      Object.assign(config, value)\n      value = config.value || 0\n      delete config.value\n    }\n    return new Atom(value, config)\n  },\n\n  cloneAtom(atom) {\n    return atom.newAtom(atom.getValue(), {\n      parent: this\n    })\n  },\n\n  getAtom (index) {\n    this.checkIndex(index)\n    return this.atoms[index]\n  },\n\n  getAtoms () {\n    return this.atoms\n  },\n\n  getNomial (index) {\n    this.checkIndex(index)\n    return this.atoms[index].getValue()\n  },\n\n  forEach (call) {\n    return this.atoms.forEach(call)\n  },\n\n  map (call) {\n    return this.atoms.map(call)\n  },\n\n  reduce (call, init) {\n    return this.atoms.reduce(call, init)\n  },\n\n  collect (call, init = []) {\n    return this.reduce((list, atom, index) => list.concat(call(atom, index)), init)\n  },\n\n  getNomials () {\n    return this.map(atom => atom.getValue())\n  },\n\n  getTrimmedNomials (precision = PointConst.PRECISION) {\n    return trimNomials(this.getNomials(), precision)\n  },\n\n  getDimensions () {\n    return this.atoms.length\n  },\n\n  checkIndex (index) {\n    return this.checkDimension(index + 1)\n  },\n\n  getRandomIndex () {\n    return randomNaturalNumber(this.atoms.length)\n  },\n\n  checkDimension (dimension) {\n    if (this.getDimensions() < dimension) this.extendDimension(dimension)\n  },\n\n  extendDimension (dimension, nomial = 0) {\n    repeat(index => this.fillAtomAt(index, nomial), dimension)\n    return this\n  },\n\n  // TODO: add test\n  isCloseTo (point, precision = PointConst.PRECISION) {\n    return isCloseTo(this.euclideanDistance(point), 0, precision) \n  },\n\n  fillAtomAt (index) {\n    this.atoms[index] = this.atoms[index] || this.makeAtom()\n  },\n\n  cloneWithNewAtomAt (index, atom, direction) {\n    this.checkIndex(index)\n    const newPoint = this.newPoint()\n    atom.parent = newPoint\n    for (let i in this.atoms) {\n      const needClone = +i !== +index\n      const atomForNewPoint = needClone ? newPoint.cloneAtom(this.atoms[i]) : atom\n\n      if (needClone && direction && direction[i] && direction[index]) {\n        const baseOffset = atom.value - this.atoms[index].value\n        const offset = baseOffset * (direction[i] / direction[index])\n        atomForNewPoint.forceOffsetValue(offset)\n      }\n\n      newPoint.atoms[i] = atomForNewPoint\n    }\n    return newPoint\n  },\n\n  isSame (point) {\n    return isSameNomials(this.getNomials(), point.getNomials())\n  },\n\n  isTrapped () {\n    return !this.atoms.some(atom => !atom.isTrapped())\n  },\n\n  euclideanDistance (point) {\n    return euclideanDistance(this.getNomials(), point.getNomials())\n  },\n\n  checkoutMatchAtoms (point, func) {\n    return repeat(\n      i => {\n        const thisAtom = this.atoms[i]\n        const pointAtom = point.atoms[i]\n        return thisAtom && pointAtom && func.call(thisAtom, pointAtom)\n          ? [thisAtom, i]\n          : []\n      },\n      Math.max(this.atoms.length, point.atoms.length)\n    ).filter(([x]) => x)\n  },\n\n  getDirection (point, baseIndex = 0) {\n    let baseDivisor\n    return repeat(\n      i => {\n        const thisIndexValue = this.atoms[i] ? this.atoms[i].value : 0\n        const pointIndexValue = point.atoms[i] ? point.atoms[i].value : 0\n        const distanceAtIndex = pointIndexValue - thisIndexValue\n        if (baseIndex === i) baseDivisor = Math.abs(distanceAtIndex || 1)\n        return distanceAtIndex\n      },\n      Math.max(this.atoms.length, point.atoms.length)\n    ).map(distance => distance / baseDivisor)\n  }\n}\n","const Atom = require('../Atom')\nconst {\n  randomDistanceRatio,\n  randomPositiveDistanceRatio,\n  repeat\n} = require('../shared/utils')\n\nmodule.exports = {\n  findLeftNeighborAt (index, distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    const atomNeighbor = this.getAtom(index).findLeftNeighbor(distanceRatio)\n    return this.cloneWithNewAtomAt(index, atomNeighbor)\n  },\n\n  findRightNeighborAt (index, distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    const atomNeighbor = this.getAtom(index).findRightNeighbor(distanceRatio)\n    return this.cloneWithNewAtomAt(index, atomNeighbor)\n  },\n\n  findNeighborAt (index, distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    const atomNeighbor = this.getAtom(index).findNeighbor(distanceRatio)\n    return this.cloneWithNewAtomAt(index, atomNeighbor)\n  },\n\n  findBiNeighborsAt (index, direction) {\n    const biNeighbors = this.getAtom(index).findBiNeighbors()\n    return biNeighbors.map(atomNeighbor => this.cloneWithNewAtomAt(index, atomNeighbor, direction))\n  },\n\n  findBiNeighbors () {\n    return this.collect((_, index) => this.findBiNeighborsAt(index))\n  },\n\n  findBiNeighborsMatrix (directions) {\n    // TODO: find out why random works here\n    return this.collect((_, index) => [\n      this.findBiNeighborsAt(index, Math.random() > 0.5 ? directions[index] : null)\n    ])\n  },\n\n  // TODO: add test\n  getBiNeighborsAt (index) {\n    const atom = this.getAtom(index)\n    let neighbors = []\n    if (atom.left) neighbors.push(atom.left.parent)\n    if (atom.right) neighbors.push(atom.right.parent)\n    return neighbors\n  },\n\n  getBiNeighbors () {\n    return this.collect((atom, index) => this.getBiNeighborsAt(index))\n  },\n\n  getNeighbors (depth = 1) {\n    if (depth < 1) return []\n    const biNeighbors = this.getBiNeighbors()\n\n    const secondNeighbors = biNeighbors.reduce((neighbors, biNeighbor) =>\n      neighbors.concat(\n        biNeighbor.getNeighbors(depth - 1).filter(n => n !== this)\n    ), [])\n\n    return [...new Set(biNeighbors.concat(secondNeighbors))]\n  },\n\n  findRandomNeighborAt (index) {\n    const atomNeighbor = this.getAtom(index).findRandomNeighbor()\n    return this.cloneWithNewAtomAt(index, atomNeighbor)\n  },\n\n  findRandomNeighborsAt (index, count = 1) {\n    const atomNeighbors = this.getAtom(index).findRandomNeighbors(count)\n    return repeat(i => this.cloneWithNewAtomAt(index, atomNeighbors[i]), count)\n  },\n\n  findRandomLeftNeighborWith (distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    return this.findLeftNeighborAt(this.getRandomIndex(), distanceRatio)\n  },\n\n  findRandomLeftNeighborsWith (distanceRatio = Atom.DISTANCE_RATIO_HALF, count = 1) {\n    return repeat(() => this.findRandomLeftNeighborWith(distanceRatio), count)\n  },\n\n  findRandomLeftNeighbor () {\n    return this.findRandomLeftNeighborWith(randomPositiveDistanceRatio())\n  },\n\n  findRandomLeftNeighbors (count = 1) {\n    return repeat(() => this.findRandomLeftNeighbor(), count)\n  },\n\n  findRandomRightNeighborWith (distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    return this.findRightNeighborAt(this.getRandomIndex(), distanceRatio)\n  },\n\n  findRandomRightNeighborsWith (distanceRatio = Atom.DISTANCE_RATIO_HALF, count = 1) {\n    return repeat(() => this.findRandomRightNeighborWith(distanceRatio), count)\n  },\n\n  findRandomRightNeighbor () {\n    return this.findRandomRightNeighborWith(randomPositiveDistanceRatio())\n  },\n\n  findRandomRightNeighbors (count = 1) {\n    return repeat(() => this.findRandomRightNeighbor(), count)\n  },\n\n  findRandomNeighborWith (distanceRatio = Atom.DISTANCE_RATIO_HALF) {\n    return this.findNeighborAt(this.getRandomIndex(), distanceRatio)\n  },\n\n  findRandomNeighborsWith (distanceRatio = Atom.DISTANCE_RATIO_HALF, count = 1) {\n    return repeat(() => this.findRandomNeighborWith(distanceRatio), count)\n  },\n\n  findRandomNeighbor () {\n    return this.findRandomNeighborWith(randomDistanceRatio())\n  },\n\n  findRandomNeighbors (count = 1) {\n    return repeat(() => this.findRandomNeighbor(), count)\n  },\n\n  checkNeighbor (point) {\n    const neighborAtoms = this.checkoutMatchAtoms(point, Atom.prototype.isNeighbor)\n    if (neighborAtoms.length > 1)\n      throw new Error(`checkNeighbor: neighborAtoms are more than 2 - ${neighborAtoms.length}`)\n    return neighborAtoms[0]\n  },\n\n  isLeftNeighbor (point) {\n    const neighborInfo = this.checkNeighbor(point)\n    if (!neighborInfo) return false\n    const [atom, index] = neighborInfo\n    return atom.isLeftNeighbor(point.atoms[index])\n  },\n\n  isRightNeighbor (point) {\n    const neighborInfo = this.checkNeighbor(point)\n    if (!neighborInfo) return false\n    const [atom, index] = neighborInfo\n    return atom.isRightNeighbor(point.atoms[index])\n  },\n\n  isNeighbor (point) {\n    return !!this.checkNeighbor(point)\n  },\n\n  printNeighborsAt (index, log = true) {\n    const atom = this.getAtom(index)\n    const result = [\n      atom.left && atom.left.parent,\n      atom.right && atom.right.parent\n    ].filter(atomNeighbor => atomNeighbor)\n     .map(point => point.getTrimmedNomials(0))\n     .filter(nomials => nomials.length)\n\n    if (log && result.length) console.log(JSON.stringify(result, null, 2))\n    return result\n  },\n\n  printNeighbors (log = true) {\n    return this.map((_, index) => this.printNeighborsAt(index, log))\n      .filter(neighbors => neighbors.length)\n  }\n}\n","const Atom = require('../Atom')\nconst {\n  randomSafeNumber,\n  randomPositiveSafeNumber,\n  repeat\n} = require('../shared/utils')\n\nmodule.exports = {\n  findLeftConnectedAt (index, distance = Atom.DISTANCE_STEP_ONE) {\n    const atomConnected = this.getAtom(index).findLeftConnected(distance)\n    return this.cloneWithNewAtomAt(index, atomConnected)\n  },\n\n  findRightConnectedAt (index, distance = Atom.DISTANCE_STEP_ONE) {\n    const atomConnected = this.getAtom(index).findRightConnected(distance)\n    return this.cloneWithNewAtomAt(index, atomConnected)\n  },\n\n  findConnectedAt (index, distance = Atom.DISTANCE_STEP_ONE) {\n    const atomConnected = this.getAtom(index).findConnected(distance)\n    return this.cloneWithNewAtomAt(index, atomConnected)\n  },\n\n  findConnectedAtWithScalar (index, value) {\n    const atomConnected = this.getAtom(index).findConnectedAtScalar(value)\n    return this.cloneWithNewAtomAt(index, atomConnected)\n  },\n\n  findRandomLeftConnectedWith (distance = Atom.DISTANCE_STEP_ONE) {\n    return this.findLeftConnectedAt(this.getRandomIndex(), distance)\n  },\n\n  findRandomLeftConnectedsWith (distance = Atom.DISTANCE_STEP_ONE, count = 1) {\n    return repeat(() => this.findRandomLeftConnectedWith(distance), count)\n  },\n\n  findRandomLeftConnected () {\n    return this.findRandomLeftConnectedWith(randomPositiveSafeNumber())\n  },\n\n  findRandomLeftConnecteds (count = 1) {\n    return repeat(() => this.findRandomLeftConnected(), count)\n  },\n\n  findRandomRightConnectedWith (distance = Atom.DISTANCE_STEP_ONE) {\n    return this.findRightConnectedAt(this.getRandomIndex(), distance)\n  },\n\n  findRandomRightConnectedsWith (distance = Atom.DISTANCE_STEP_ONE, count = 1) {\n    return repeat(() => this.findRandomRightConnectedWith(distance), count)\n  },\n\n  findRandomRightConnected () {\n    return this.findRandomRightConnectedWith(randomPositiveSafeNumber())\n  },\n\n  findRandomRightConnecteds (count = 1) {\n    return repeat(() => this.findRandomRightConnected(), count)\n  },\n\n  findRandomConnectedWith (distance = Atom.DISTANCE_STEP_ONE) {\n    return this.findConnectedAt(this.getRandomIndex(), distance)\n  },\n\n  findRandomConnectedsWith (distance = Atom.DISTANCE_STEP_ONE, count = 1) {\n    return repeat(() => this.findRandomConnectedWith(distance), count)\n  },\n\n  findRandomConnected () {\n    return this.findRandomConnectedWith(randomSafeNumber())\n  },\n\n  findRandomConnecteds (count = 1) {\n    return repeat(() => this.findRandomConnected(), count)\n  },\n\n  findRandomConnectedWithScalar (value) {\n    return this.findConnectedAtWithScalar(this.getRandomIndex(), value)\n  },\n\n  checkConnected (point) {\n    const connectedAtoms = this.checkoutMatchAtoms(point, Atom.prototype.isConnected)\n    if (connectedAtoms.length > 1)\n      throw new Error(`checkConnected: connectedAtoms are more than 2 - ${connectedAtoms.length}`)\n    return connectedAtoms[0]\n  },\n\n  isLeftConnected (point) {\n    const connectedInfo = this.checkConnected(point)\n    if (!connectedInfo) return false\n    const [atom, index] = connectedInfo\n    return atom.isLeftConnected(point.atoms[index])\n  },\n\n  isRightConnected (point) {\n    const connectedInfo = this.checkConnected(point)\n    if (!connectedInfo) return false\n    const [atom, index] = connectedInfo\n    return atom.isRightConnected(point.atoms[index])\n  },\n\n  isConnected (point) {\n    return !!this.checkConnected(point)\n  }\n}\n","module.exports = {\n  getLeftChainPointsAt (index, includeSelf = false) {\n    return this.getAtom(index).getLeftChainAtoms(includeSelf).map(atom => atom.parent)\n  },\n\n  getRightChainPointsAt (index, includeSelf = false) {\n    return this.getAtom(index).getRightChainAtoms(includeSelf).map(atom => atom.parent)\n  },\n\n  getChainPointsAt (index, includeSelf = true) {\n    return [...this.getLeftChainPointsAt(index, includeSelf), ...this.getRightChainPointsAt(index)]\n  },\n\n  // TODO: return new Points() object, add convenient methods\n  getChainPoints (includeSelf = true) {\n    return this.collect(\n      (_, index) => this.getChainPointsAt(index, false),\n      includeSelf ? [this] : [])\n  },\n\n  shakeOffChainPoints () {\n    this.forEach(atom => {\n      if (atom.left) atom.left.shakeOffLeft()\n      if (atom.right) atom.right.shakeOffRight()\n    })\n  },\n\n  shakeOff () {\n    this.forEach(atom => atom.shakeOff())\n  }\n}\n","module.exports = {\n  getInNetworkPoints (includeSelf = true) {\n    const results = this.getChainPoints()\n    let index = 0\n    while (results[index]) {\n      const point = results[index]\n      point.getChainPoints(false).forEach(point => {\n        if (results.indexOf(point) < 0) results.push(point)\n      })\n      index ++\n    }\n    if (!includeSelf) results.shift()\n    return results\n  },\n\n  isInNetwork (point) {\n    return this.getInNetworkPoints().indexOf(point) > -1\n  }\n}\n","const PointConst = require('./Point.Const')\nconst PointCore = require('./Point.Core')\nconst PointNeighbor = require('./Point.Neighbor')\nconst PointConnected = require('./Point.Connected')\nconst PointChain = require('./Point.Chain')\nconst PointNetwork = require('./Point.Network')\n\nclass Point {\n  static PRECISION = PointConst.PRECISION\n  // TODO: ADD boundary & base baseUnit config\n  constructor (nomials = [], config = {}) {\n    this.atoms = nomials.map(value => this.makeAtom(value))\n    Object.assign(this, config)\n  }\n  newPoint (...args) {\n    return new Point(...args)\n  }\n}\n\nObject.assign(Point.prototype, {\n  ...PointCore,\n  ...PointNeighbor,\n  ...PointConnected,\n  ...PointChain,\n  ...PointNetwork\n})\n\nmodule.exports = Point\n","const Point = require('../Point')\nconst {\n  isCloseTo\n} = require('../shared/utils')\nconst SpaceConst = require('./Space.Const')\n\nmodule.exports = {\n  take (inputs, expectations) {\n    this.inputs = this.inputs.concat(inputs)\n    this.expectations = this.expectations.concat(expectations)\n    return this\n  },\n\n  setup (origin = [0], config) {\n    this.minDistance = Infinity\n    this.minDistancePoint = null\n    this.dimension = origin.length\n    this.stepCount = 0\n    this.checkCount = 0\n    this.lastSearchTimeUsed = 0\n\n    this.previousVisitedIndex = 0\n    this.visitingIndex = 0\n    this.keyPoints = []\n    this.directions = []\n\n    this.visitedPoints = []\n    this.checkedPoints = []\n    this.check(new Point(origin, config))\n\n    this.destroyed = false\n    this.onProgress = null\n  },\n\n  gotPerfectSolution () {\n    return isCloseTo(this.minDistance, 0, SpaceConst.PRECISION)\n  },\n\n  check (point) {\n    this.checkCount ++\n    point.distance = this.meanSquaredError(point)\n    return this.updateMinDistance(point)\n  },\n\n  isMinDistancePointTrapped () {\n    return this.minDistancePoint.isTrapped()\n  },\n\n  updateMinDistance (point) {\n    // this.checkedPoints.push(point)\n    if (point.distance >= this.minDistance) return false\n\n    this.beforeUpdateMinDistance()\n    this.minDistance = point.distance\n    this.minDistancePoint = point\n    // this.visitedPoints.push(point)\n\n    this.stepCount ++\n    return true\n  },\n\n  updateVisitingIndex () {\n    this.visitingIndex = (this.visitingIndex + 1) % this.dimension\n  },\n\n  beforeUpdateMinDistance () {\n    const indexSwitched = this.visitingIndex !== this.previousVisitedIndex\n    if (indexSwitched) {\n      this.updateSettledKeyPoint(this.previousVisitedIndex)\n      this.previousVisitedIndex = this.visitingIndex\n    }\n  },\n\n  updateSettledKeyPoint (index) {\n    const previousKeyPoint = this.keyPoints[index]\n    this.updateDirection(index, previousKeyPoint, this.minDistancePoint)\n    this.keyPoints[index] = this.minDistancePoint\n  },\n\n  updateDirection (index, previousKeyPoint, currentKeyPoint) {\n    this.directions[index] = previousKeyPoint\n      ? previousKeyPoint.getDirection(currentKeyPoint, this.visitingIndex)\n      : this.directions[index]\n  },\n\n  resetStartPoint () {\n    this.keyPoints = []\n    this.directions = []\n    this.minDistancePoint.shakeOff()\n  },\n\n  extendDimension () {\n    this.dimension ++\n    this.minDistancePoint.shakeOffChainPoints()\n    this.minDistancePoint.extendDimension(this.dimension)\n  },\n\n  squaredError (point, input, expectation) {\n    const system = this.translation(point.getNomials())\n    const output = system(input)\n    return (expectation - output) ** 2\n  },\n\n  meanSquaredError (point) {\n    const totalSquaredError = this.inputs.reduce((error, input, index) =>\n      error + this.squaredError(point, input, this.expectations[index])\n    , 0)\n    return Math.sqrt(totalSquaredError)\n  },\n\n  destroy () {\n    this.destroyed = true\n    this.keyPoints.length = 0\n    this.directions.length = 0\n    this.visitedPoints.length = 0\n    this.checkedPoints.length = 0\n    this.minDistancePoint.shakeOff()\n    this.onProgress = null\n  }\n}\n","const {\n  randomSubList\n} = require('../shared/utils')\nconst SpaceConst = require('./Space.Const')\n\nmodule.exports = {\n  printMinNeighbors () {\n    const minNeighborsNomials = this.minDistancePoint.printNeighbors(false)\n    return JSON.stringify(minNeighborsNomials, null, 2)\n  },\n\n  regularSample (log, amount = 100) {\n    const logLength = log.length\n    const samplingPeriod = Math.floor(logLength / amount)\n    return log\n      .filter((_, index) => !(index % samplingPeriod))\n      .map(point => point.extendDimension(this.dimension))\n  },\n\n  randomSample (log, amount = 100) {\n    return randomSubList(log, amount)\n      .map(point => point.extendDimension(this.dimension))\n  },\n\n  sampleLog (log, amount) {\n    return this.regularSample(log, amount)\n  },\n\n  printPointsLog (log, amount) {\n    return this.sampleLog(log, amount)\n      .map(point => [...point.getNomials(), point.distance].join('\\t'))\n      .join('\\n')\n  },\n\n  printVisitedPoints (logSampleAmount) {\n    return this.printPointsLog(this.visitedPoints, logSampleAmount)\n  },\n\n  printCheckedPoints (logSampleAmount) {\n    return this.printPointsLog(this.checkedPoints, logSampleAmount)\n  },\n\n  async printSolution ({\n    precision = SpaceConst.PRECISION,\n    solutionFormatter = x => x,\n    showMinNeighbors = false,\n    showVisitedPoints = false,\n    showCheckedPoints = false,\n    logSampleAmount = 100,\n    printFunc = console.log.bind(console)\n  } = {}) {\n    const thePoint = this.minDistancePoint\n    const solutionNomials = thePoint.getTrimmedNomials(precision)\n    const solution = solutionFormatter(solutionNomials)\n    const successTrialRate = (100 * this.stepCount / this.checkCount).toFixed(2)\n    const timeStepSpeed = (this.stepCount / this.lastSearchTimeUsed).toFixed(4)\n\n    await printFunc(`Find${\n      this.gotPerfectSolution() ? ' perfect' : '' } curve fitting: ${\n      solution} \\n  in ${\n      this.lastSearchTimeUsed } ms in ${\n      this.stepCount } steps \\n  with speed ${\n      timeStepSpeed} steps/ms \\n  tried ${\n      this.checkCount } times in ${\n      this.dimension } dimensions \\n  with success trial rate ${\n      successTrialRate}% \\n  got min distance ${\n      this.minDistance } \\n \\nVisualize it\n      https://www.desmos.com/calculator\n      https://chart-studio.plotly.com/create/ ${\n      showMinNeighbors ? this.printMinNeighbors() : ''} \\n${\n      showVisitedPoints\n        ? '\\nVisited Points: \\n' + this.printVisitedPoints(logSampleAmount)\n        : ''} \\n${\n      showCheckedPoints\n        ? '\\nChecked Points: \\n' + this.printCheckedPoints(logSampleAmount)\n        : ''\n      }`)\n  }\n\n}\n","const {\n  isCloseToPeriod,\n  sleep\n} = require('../shared/utils')\nconst SpaceConst = require('./Space.Const')\n\nmodule.exports = {\n  findRandomMinNeighbor () {\n    return this.minDistancePoint.findRandomNeighbor()\n  },\n\n  findBiNeighbors () {\n    return this.minDistancePoint.findBiNeighbors()\n  },\n\n  checkBiNeighbors () {\n    const biNeighbors = this.findBiNeighbors()\n    for (let biNeighbor of biNeighbors)\n      if (this.check(biNeighbor)) break\n    return biNeighbors\n  },\n\n  findBiNeighborsMatrix () {\n    return this.minDistancePoint.findBiNeighborsMatrix(this.directions)\n  },\n\n  checkBiNeighborsMatrixList (list) {\n    for (let point of list)\n      if(this.check(point)) return true\n    return false\n  },\n\n  checkBiNeighborsMatrix () {\n    const matrix = this.findBiNeighborsMatrix()\n    let matrixIsNotEmpty = false\n    let count = 0\n    while (count < this.dimension) {\n      const list = matrix[this.visitingIndex]\n      matrixIsNotEmpty = matrixIsNotEmpty || (list.length > 0)\n      if (this.checkBiNeighborsMatrixList(list)) break\n      count ++\n      this.updateVisitingIndex()\n    }\n    return matrixIsNotEmpty\n  },\n\n  // exploreBiNeighborsMatrix performs 8% faster than exploreBiNeighbors\n  // by index preferring & quick breaking\n  // Quick breaking contributes the most performance improvement\n  // Index preferring adds a slight advantage\n  exploreBiNeighborsMatrix(maxDimensions) {\n    if (this.destroyed) return false\n\n    let exploredSome = this.checkBiNeighborsMatrix()\n    if (!exploredSome && (this.dimension < maxDimensions)) {\n      this.extendDimension()\n      exploredSome = this.checkBiNeighborsMatrix()\n    }\n\n    return exploredSome\n  },\n\n  exploreBiNeighbors(maxDimensions) {\n    const minBiNeighbors = this.checkBiNeighbors()\n    if (!minBiNeighbors.length && (this.dimension < maxDimensions)) {\n      this.extendDimension()\n      return this.checkBiNeighbors()\n    }\n    return minBiNeighbors\n  },\n\n  async exploreLocalMinimum ({timeBudget, trialBudget, maxDimensions}) {\n    const timePlaned = timeBudget * 1000\n    const startAt = +new Date()\n    let count = 0\n    while (count < trialBudget) {\n      const timeUsed= new Date() - startAt\n      if (timeUsed > timePlaned) break\n      if (this.gotPerfectSolution()) break\n      if (isCloseToPeriod(timeUsed, 100)) {\n        this.onProgress && this.onProgress(this.minDistancePoint, this)\n        await sleep(0)\n      }\n      if (!this.exploreBiNeighborsMatrix(maxDimensions)) break\n      count ++\n    }\n    const totalTimeUsed = new Date() - startAt\n    this.lastSearchTimeUsed = totalTimeUsed || this.lastSearchTimeUsed\n  },\n\n  async findThePoint ({\n    timeBudget = Infinity,\n    trialBudget = Infinity,\n    maxDimensions = Infinity\n  } = {}) {\n    if (timeBudget === Infinity &&\n      trialBudget === Infinity\n    ) timeBudget = SpaceConst.TIME_BUDGET_DEFAULT\n    await this.exploreLocalMinimum({timeBudget, trialBudget, maxDimensions})\n    return this.minDistancePoint\n  }\n}\n","const SpaceConst = require('./Space.Const')\nconst SpaceCore = require('./Space.Core')\nconst SpacePrint = require('./Space.Print')\nconst SpaceExplore = require('./Space.Explore')\n\nclass Space {\n  static PRECISION = SpaceConst.PRECISION\n  static TIME_BUDGET_DEFAULT = SpaceConst.TIME_BUDGET_DEFAULT\n\n  constructor (translation = () => 0, config = {}) {\n    this.translation = translation\n    this.inputs = []\n    this.expectations = []\n    Object.assign(this, config)\n  }\n}\n\nObject.assign(Space.prototype, {\n  ...SpaceCore,\n  ...SpaceExplore,\n  ...SpacePrint\n})\n\nmodule.exports = Space\n","class DesmosView {\n  constructor (elt) {\n    this.elt = elt\n    this.calculator = Desmos.GraphingCalculator(elt)\n\n    this.latex = 'f(x)=0'\n    this.xValues = []\n    this.yValues = []\n\n    this.init()\n  }\n\n  getInputsExpectations () {\n    return {\n      inputs: this.xValues.map(x => +x),\n      expectations: this.yValues.map(y => +y)\n    }\n  }\n\n  init () {\n    this.bindEvents()\n  }\n\n  async bindEvents () {\n    this.elt.addEventListener('touchend', e => this.onClick(e))\n    this.elt.addEventListener('click', e => this.onClick(e))\n  }\n\n  onClick (evt) {\n    if (!/dcg-graph-outer/.test(evt.target.className)) return\n    evt = (evt.touches && evt.touches[0]) || (evt.changedTouches && evt.changedTouches[0]) || evt\n\n    const rect = this.elt.getBoundingClientRect()\n    const x = evt.clientX - rect.left\n    const y = evt.clientY - rect.top\n    const mathCoordinates = this.calculator.pixelsToMath({x: x, y: y})\n\n    if (!this.inRectangle(\n      mathCoordinates,\n      this.calculator.graphpaperBounds.mathCoordinates\n    )) return\n\n    this.xValues.push(mathCoordinates.x.toPrecision(2))\n    this.yValues.push(mathCoordinates.y.toPrecision(2))\n    this.updateTable()\n  }\n\n  updateLatex (latex) {\n    this.latex = latex\n    this.updateGraph()\n  }\n\n  updateGraph () {\n    this.calculator.setExpression({\n      id: 'graph1',\n      latex: this.latex\n    })\n  }\n\n  updateTable () {\n    this.calculator.setExpression({\n      id: 'table1',\n      type: 'table',\n      columns: [\n        {latex: 'x', values: this.xValues},\n        {latex: 'y', values: this.yValues}\n      ]\n    })\n    this.afterUpdateTable && this.afterUpdateTable(this)\n  }\n\n  updateNomials (nomials) {\n    this.calculator.setExpression({\n      id: 'table-nomial',\n      type: 'table',\n      columns: [\n        {latex: 'n', values: Object.keys(nomials).map(k => +k), hidden: true},\n        {latex: 'a_n', values: nomials, hidden: true}\n      ],\n      points: false\n    })\n  }\n\n  inRectangle (point, rect) {\n    return (\n      point.x >= rect.left &&\n      point.x <= rect.right &&\n      point.y <= rect.top &&\n      point.y >= rect.bottom\n    )\n  }\n}\n\nmodule.exports = {\n  DesmosView\n}\n","import 'regenerator-runtime/runtime'\nimport Space from '../packages/Space'\nimport {\n  polyNumbersTranslation,\n  polyNumbersFormatter,\n  parsePolyNumbersFormula\n} from '../packages/shared/utils'\nimport { DesmosView } from './desmos'\n\n;(async() => {\n  const dView = new DesmosView(document.getElementById('desmos-calculator'))\n  let space\n\n  dView.afterUpdateTable = async dv => {\n    space && space.destroy()\n\n    const {inputs, expectations} = dv.getInputsExpectations()\n    space = new Space(polyNumbersTranslation)\n    const origin = [0] || parsePolyNumbersFormula(startFormula)\n    space.take(inputs, expectations).setup(origin)\n    const update = point => {\n      const nomials = point.getNomials()\n      dv.updateLatex(polyNumbersFormatter(nomials, false))\n      dv.updateNomials(nomials)\n    }\n    space.onProgress = update\n\n    const minDistancePoint = await space.findThePoint({\n      timeBudget: 10 * 60,\n      trialBudget: 10 * 1000 * 1000,\n      maxDimensions: 100\n    })\n\n    update(minDistancePoint)\n  }\n})()\n"]}